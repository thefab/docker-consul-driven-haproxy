global
    log         {{CONDRI_HAPROXY_SYSLOG_IP}} {{CONDRI_HAPROXY_SYSLOG_FACILITY}}
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     {{CONDRI_HAPROXY_MAXCONN}}
    user        haproxy
    group       haproxy
    stats socket /var/lib/haproxy/stats
    daemon

defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor {{CONDRI_HAPROXY_FORWARDFOR}}
    option                  redispatch
    retries                 3
    timeout http-request    {{CONDRI_HAPROXY_TIMEOUT_HTTP_REQUEST}}
    timeout queue           {{CONDRI_HAPROXY_TIMEOUT_QUEUE}}
    timeout connect         {{CONDRI_HAPROXY_TIMEOUT_CONNECT}}
    timeout client          {{CONDRI_HAPROXY_TIMEOUT_CLIENT}}
    timeout server          {{CONDRI_HAPROXY_TIMEOUT_SERVER}}
    timeout http-keep-alive {{CONDRI_HAPROXY_TIMEOUT_HTTP_KEEP_ALIVE}}
    timeout check           {{CONDRI_HAPROXY_TIMEOUT_CHECK}}
    maxconn                 {{CONDRI_HAPROXY_MAXCONN}}


{% for service in CONDRI_HAPROXY_SERVICES | from_json %}
{% set mode,port,balance,service_name = service.split('::') %}
frontend main *:{{port}}
    mode {{mode}}
    default_backend app_{{mode}}_{{port}}

backend app_{{mode}}_{{port}}
    balance {{balance}}
    mode {{mode}}
    stats enable
    {% if mode == "http" %}
    {% if CONDRI_HAPROXY_HTTP_CHECK == "1" %}
    option httpchk GET {{CONDRI_HAPROXY_HTTP_CHECK_URL}}
    http-check disable-on-404
    {% endif %}
    {% endif %}
    {% for server in CONDRI_HAPROXY_SERVERS | from_json %}
    {% if server.service_name == service_name %}    
    server {{server.name}} {{server.ip}}:{{server.port}}{% if mode == "http" %}{% if CONDRI_HAPROXY_HTTP_CHECK == "1" %} check{% endif %}{% endif %}
    {% endif %}
    {% endfor %}

{% endfor %}
